plugins {
    id 'java'
    id "io.spring.dependency-management" version "1.1.0" apply true
    id "org.springframework.boot" version "3.0.1" apply true
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
repositories {
    mavenLocal()
    mavenCentral()
}
apply plugin: "io.spring.dependency-management"
dependencyManagement {
    dependencies {


        imports {
            mavenBom 'org.springframework.security:spring-security-bom:6.0.3'
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.0.1"
            mavenBom "org.testcontainers:testcontainers-bom:1.17.6"
            mavenBom "com.google.protobuf:protobuf-bom:3.21.12"
        }
        dependency("org.webjars:sockjs-client:1.5.1")
        dependency("org.webjars:stomp-websocket:2.3.4")
        dependency("org.webjars:bootstrap:5.2.3")

    }
}
dependencies {
    implementation( "org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.security:spring-security-config")
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation('org.projectlombok:lombok')

    implementation 'com.h2database:h2:2.1.214'
    implementation('org.springframework:spring-orm')





    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    implementation('org.flywaydb:flyway-core')
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.webjars:webjars-locator-core")
    implementation("org.webjars:sockjs-client")
    implementation("org.webjars:stomp-websocket")
    implementation("org.webjars:bootstrap")

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}
